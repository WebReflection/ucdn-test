import{render as e,html as t,svg as n}from"../../uhtml/esm/index.js";const{define:s}=customElements,{create:o,defineProperties:a,getOwnPropertyDescriptor:l,keys:c}=Object,i=new WeakMap;export{e as render,t as html,n as svg};export const define=(e,t)=>{const{attachShadow:n,attributeChanged:p,connected:d,disconnected:h,handleEvent:u,init:b,observedAttributes:m}=t,v={},f={},y=[],w=o(null);for(let e=c(t),n=0,{length:s}=e;n<s;n++){const s=e[n];if(/^on/.test(s)&&!/Options$/.test(s)){const e=t[s+"Options"]||!1,n=s.toLowerCase();let o=n.slice(2);y.push({type:o,options:e}),w[o]=s,n!==s&&(o=n.slice(2,3)+s.slice(3),w[o]=s,y.push({type:o,options:e}))}switch(s){case"attachShadow":case"observedAttributes":break;default:f[s]=l(t,s)}}const{length:E}=y;E&&!u&&(f.handleEvent={value(e){this[w[e.type]](e)}}),m&&(v.observedAttributes={value:m}),f.attributeChangedCallback={value(){x(this),p&&p.apply(this,arguments)}},f.connectedCallback={value(){x(this),d&&d.apply(this,arguments)}},h&&(f.disconnectedCallback={value:h});const k=t.extends||"element";class C extends((e=>"element"===e?HTMLElement:document.createElement(e).constructor)(k)){}a(C,v),a(C.prototype,f);const g=[e,C];function x(e){if(!i.has(e)){i.set(e,0),a(e,{html:{value:r.bind(n?e.attachShadow(n):e)}});for(let t=0;t<E;t++){const{type:n,options:s}=y[t];e.addEventListener(n,e,s)}b&&b.call(e)}}"element"!==k&&g.push({extends:k}),s.apply(customElements,g)};function r(){return e(this,t.apply(null,arguments))}