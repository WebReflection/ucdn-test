const attr=/([^\s\\>"'=]+)\s*=\s*(['"]?)$/,empty=/^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i,node=/<[a-z][^>]+$/i,notNode=/>[^<>]*$/,selfClosing=/<([a-z]+[a-z0-9:._-]*)([^>]*?)(\/>)/gi,trimEnd=/\s+$/,isNode=(e,t)=>0<t--&&(node.test(e[t])||!notNode.test(e[t])&&isNode(e,t)),regular=(e,t,r)=>empty.test(t)?e:`<${t}${r.replace(trimEnd,"")}></${t}>`;export default(e,t,r)=>{const s=[],{length:o}=e;for(let r=1;r<o;r++){const o=e[r-1];s.push(attr.test(o)&&isNode(e,r)?o.replace(attr,(e,s,o)=>`${t}${r-1}=${o||'"'}${s}${o?"":'"'}`):`${o}\x3c!--${t}${r-1}--\x3e`)}s.push(e[o-1]);const a=s.join("").trim();return r?a:a.replace(selfClosing,regular)};